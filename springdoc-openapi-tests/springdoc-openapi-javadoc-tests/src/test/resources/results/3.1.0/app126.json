{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "hello-controller",
      "description": "The type Hello controller."
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "hello-controller"
        ],
        "summary": "getAllCurrencies",
        "description": "Get all currencies",
        "operationId": "getAllCurrencies",
        "responses": {
          "200": {
            "description": "All currencies returned",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/http401BadToken"
          },
          "403": {
            "$ref": "#/components/responses/http403"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Problem": {
        "type": "object",
        "description": "The interface Problem.",
        "properties": {
          "instance": {
            "type": "string",
            "format": "uri",
            "description": "An absolute URI that identifies the specific occurrence of the problem.\n It may or may not yield further information if dereferenced."
          },
          "type": {
            "type": "string",
            "format": "uri",
            "description": "An absolute URI that identifies the problem type. When dereferenced,\n it SHOULD provide human-readable documentation for the problem type\n (e.g., using HTML). When this member is not present, its value is\n assumed to be \"about:blank\"."
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {},
            "description": "Optional, additional attributes of the problem. Implementations can choose to ignore this in favor of concrete,\n typed fields."
          },
          "detail": {
            "type": "string",
            "description": "A human readable explanation specific to this occurrence of the problem."
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable summary of the problem type. It SHOULD NOT\n change from occurrence to occurrence of the problem, except for\n purposes of localisation."
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "description": "The HTTP status code generated by the origin server for this\n occurrence of the problem."
          }
        }
      }
    },
    "responses": {
      "http401NoToken": {
        "description": "Invalid authentication.",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            }
          }
        }
      },
      "http401BadToken": {
        "description": "Invalid authentication.",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            }
          }
        }
      },
      "http403": {
        "description": "Missing authorities.",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            }
          }
        }
      }
    }
  }
}
